{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Icinga Director Workshop Duration: 2 days Knowledge recommended: Good basic knowledge on Icinga and monitoring Icinga Fundamentals training is recommended to get started Practical experience with Icinga in your own environment Content Online All content and the source of virtual machines can be found on GitHub: https://github.com/NETWAYS/workshop-icinga-director Topics Director Basics Templates for Hosts and Services Host Objects Utilizing Apply rules Services Sets Fields and Parameters Configuring an Icinga Environment Icinga Master Icinga Satellite Agent on Linux and Windows Import and Sync Importing data from files Importing from SQL Workshop Environment Notebook mit VirtualBox, and VMs for Icinga Master Icinga Satellite Linux Agent Windows Agent","title":"Introduction"},{"location":"#icinga-director-workshop","text":"Duration: 2 days Knowledge recommended: Good basic knowledge on Icinga and monitoring Icinga Fundamentals training is recommended to get started Practical experience with Icinga in your own environment","title":"Icinga Director Workshop"},{"location":"#content-online","text":"All content and the source of virtual machines can be found on GitHub: https://github.com/NETWAYS/workshop-icinga-director","title":"Content Online"},{"location":"#topics","text":"Director Basics Templates for Hosts and Services Host Objects Utilizing Apply rules Services Sets Fields and Parameters Configuring an Icinga Environment Icinga Master Icinga Satellite Agent on Linux and Windows Import and Sync Importing data from files Importing from SQL","title":"Topics"},{"location":"#workshop-environment","text":"Notebook mit VirtualBox, and VMs for Icinga Master Icinga Satellite Linux Agent Windows Agent","title":"Workshop Environment"},{"location":"labs/01-Training-VMs/","text":"Lab - Training VMs Passwords SSH Login: vagrant / vagrant (same password for root) Icinga Web Admin: icingaadmin / icinga Virtual Machines master 192.168.56.11 satellite 192.168.56.12 agent-linux 192.168.56.21 agent-windows 192.168.56.22 Also see /etc/hosts on your notebook. Tasks Press the Windows Key and search for \u201cVirtualBox\u201d or \u201cOracle VM VirtualBox\u201d Start master and satellite VM Login to all VMs by ssh <hostname> Switch to root via sudo -i Inspect Icinga 2 Installation on \u201cmaster\u201d and \u201csatellite\u201d check content of /etc/icinga2 icinga2 daemon -C Check log if master and satellite are connected Open Firefox and browse to http://master/ Login with icingaadmin and check if Icinga is running","title":"Training VMs"},{"location":"labs/01-Training-VMs/#lab-training-vms","text":"","title":"Lab - Training VMs"},{"location":"labs/01-Training-VMs/#passwords","text":"SSH Login: vagrant / vagrant (same password for root) Icinga Web Admin: icingaadmin / icinga","title":"Passwords"},{"location":"labs/01-Training-VMs/#virtual-machines","text":"master 192.168.56.11 satellite 192.168.56.12 agent-linux 192.168.56.21 agent-windows 192.168.56.22 Also see /etc/hosts on your notebook.","title":"Virtual Machines"},{"location":"labs/01-Training-VMs/#tasks","text":"Press the Windows Key and search for \u201cVirtualBox\u201d or \u201cOracle VM VirtualBox\u201d Start master and satellite VM Login to all VMs by ssh <hostname> Switch to root via sudo -i Inspect Icinga 2 Installation on \u201cmaster\u201d and \u201csatellite\u201d check content of /etc/icinga2 icinga2 daemon -C Check log if master and satellite are connected Open Firefox and browse to http://master/ Login with icingaadmin and check if Icinga is running","title":"Tasks"},{"location":"labs/10-Install-Director/","text":"Lab - Inspect Director Installation The Director is pre-installed in version 1.7.x , as well as the required modules: ipl , incubator and reactbundle . Inspect /usr/share/icingaweb2/modules Check if icinga-director.service is running # systemctl status icinga-director.service Open Icinga Web 2 and access the Director overview Select the director_db database and create the schema Check if the background daemon becomes active after a few seconds","title":"Setting Up Director"},{"location":"labs/10-Install-Director/#lab-inspect-director-installation","text":"The Director is pre-installed in version 1.7.x , as well as the required modules: ipl , incubator and reactbundle . Inspect /usr/share/icingaweb2/modules Check if icinga-director.service is running # systemctl status icinga-director.service Open Icinga Web 2 and access the Director overview Select the director_db database and create the schema Check if the background daemon becomes active after a few seconds","title":"Lab - Inspect Director Installation"},{"location":"labs/11-Kickstart/","text":"Lab - Kickstarting Director Go to the director module and fill the Kickstart form: Endpoint: master.icinga.local API User: director Password: director Now open Icinga Infrastructure in the main overview Check Zones and Endpoints Open the Kickstart Wizard and re-run it","title":"Kickstart"},{"location":"labs/11-Kickstart/#lab-kickstarting-director","text":"Go to the director module and fill the Kickstart form: Endpoint: master.icinga.local API User: director Password: director Now open Icinga Infrastructure in the main overview Check Zones and Endpoints Open the Kickstart Wizard and re-run it","title":"Lab - Kickstarting Director"},{"location":"labs/12-Activity-Deploy/","text":"Lab - Activity Log & Deploy Inspect the Activity Log for changes done by Kickstart Deploy the latest changes to Icinga 2 Inspect the Deployment, log and configuration files Now let\u2019s have a look on the master VM: cd /var/lib/icinga2/api find packages/ find zones/ Also have a look at the log file, and search for \u201cdirector\u201d. less /var/log/icinga2/icinga2.log","title":"Activity & Deploy"},{"location":"labs/12-Activity-Deploy/#lab-activity-log-deploy","text":"Inspect the Activity Log for changes done by Kickstart Deploy the latest changes to Icinga 2 Inspect the Deployment, log and configuration files Now let\u2019s have a look on the master VM: cd /var/lib/icinga2/api find packages/ find zones/ Also have a look at the log file, and search for \u201cdirector\u201d. less /var/log/icinga2/icinga2.log","title":"Lab - Activity Log &amp; Deploy"},{"location":"labs/13-External-Command/","text":"Lab - External Command with fields Create fields with the following external commands: ping4 ping_wrta ping_crta ping_wpl ping_cpl disk disk_partitions disk_wfree disk_cfree Go to Director -> Data fields and change disk_partitions to be an Array type.","title":"External Commands"},{"location":"labs/13-External-Command/#lab-external-command-with-fields","text":"Create fields with the following external commands: ping4 ping_wrta ping_crta ping_wpl ping_cpl disk disk_partitions disk_wfree disk_cfree Go to Director -> Data fields and change disk_partitions to be an Array type.","title":"Lab - External Command with fields"},{"location":"labs/14-Custom-Command/","text":"Lab - Custom dummy command Create your own command for check_dummy Name it NOT dummy , use something like this my/dummy local/dummy Just use check_dummy as command, Director will add PluginDir Create two arguments as noted below Add fields for the arguments Set default values under main view of the command Name: state Value: $dummy_state$ Position: 1 Skip Key: yes Name: text Value: $dummy_text$ Position: 2 Skip Key: yes","title":"Custom Commands"},{"location":"labs/14-Custom-Command/#lab-custom-dummy-command","text":"Create your own command for check_dummy Name it NOT dummy , use something like this my/dummy local/dummy Just use check_dummy as command, Director will add PluginDir Create two arguments as noted below Add fields for the arguments Set default values under main view of the command Name: state Value: $dummy_state$ Position: 1 Skip Key: yes Name: text Value: $dummy_text$ Position: 2 Skip Key: yes","title":"Lab - Custom dummy command"},{"location":"labs/20-Fields/","text":"Lab - Fields and Data Lists Create the following fields: system_type - String system_roles - Array system_os - String system_owner - String Create a data list System Types and add the following values: server desktop vm Now edit the system_type field and configure it as DataList with the new list and output String .","title":"Fields"},{"location":"labs/20-Fields/#lab-fields-and-data-lists","text":"Create the following fields: system_type - String system_roles - Array system_os - String system_owner - String Create a data list System Types and add the following values: server desktop vm Now edit the system_type field and configure it as DataList with the new list and output String .","title":"Lab - Fields and Data Lists"},{"location":"labs/31-Templates-and-Host/","text":"Lab - Templates & Hosts Create host templates: Name: default host Check Command: hostalive Add fields: system_* Add default values as you like Name: linux host Imports: default host Name: windows host Imports: default host Create a host for the master vm: Name: master.icinga.local Address: 192.168.56.11 Imports: linux host Now deploy the config and check monitoring if the host is monitored. Bonus: Check the preview of the objects Check the current content of the deployment","title":"Templates & Hosts"},{"location":"labs/31-Templates-and-Host/#lab-templates-hosts","text":"Create host templates: Name: default host Check Command: hostalive Add fields: system_* Add default values as you like Name: linux host Imports: default host Name: windows host Imports: default host Create a host for the master vm: Name: master.icinga.local Address: 192.168.56.11 Imports: linux host Now deploy the config and check monitoring if the host is monitored. Bonus: Check the preview of the objects Check the current content of the deployment","title":"Lab - Templates &amp; Hosts"},{"location":"labs/32-Hostgroups/","text":"Lab - Hostgroups Create a hostgroup which assigns based on the template. Name: Linux Server Assign: host.templates contains \"linux host\" Check member tab to see which hosts are in the group. Now deploy and check monitoring.","title":"Hostgroups"},{"location":"labs/32-Hostgroups/#lab-hostgroups","text":"Create a hostgroup which assigns based on the template. Name: Linux Server Assign: host.templates contains \"linux host\" Check member tab to see which hosts are in the group. Now deploy and check monitoring.","title":"Lab - Hostgroups"},{"location":"labs/41-Services/","text":"Lab - Services Create a service template default service , and then check specific templates. All check templates set the check command, and import default service . Create default service template Create check templates for some basic CheckCommands: ping4 disk load ssh icinga Add apply rule ping that assigns where host.address = 192.168.* Add services to the linux host template for: disk , load , ssh and icinga Deploy config Validate status in monitoring","title":"Services"},{"location":"labs/41-Services/#lab-services","text":"Create a service template default service , and then check specific templates. All check templates set the check command, and import default service . Create default service template Create check templates for some basic CheckCommands: ping4 disk load ssh icinga Add apply rule ping that assigns where host.address = 192.168.* Add services to the linux host template for: disk , load , ssh and icinga Deploy config Validate status in monitoring","title":"Lab - Services"},{"location":"labs/42-Service-Sets/","text":"Lab - Service Sets We create a \u201cWebserver\u201d service set, and assign it based on vars. Manually create a Boolean field http_ssl Update external http command and add fields for: http_vhost http_ssl http_uri Create service templates: http https , which sets http_ssl to true Update host master.icinga.local and add webserver to the system_roles array Create Service Set Webserver Add services for http and https Apply the service set via host.vars.system_roles contains \"webserver\"","title":"Service Sets"},{"location":"labs/42-Service-Sets/#lab-service-sets","text":"We create a \u201cWebserver\u201d service set, and assign it based on vars. Manually create a Boolean field http_ssl Update external http command and add fields for: http_vhost http_ssl http_uri Create service templates: http https , which sets http_ssl to true Update host master.icinga.local and add webserver to the system_roles array Create Service Set Webserver Add services for http and https Apply the service set via host.vars.system_roles contains \"webserver\"","title":"Lab - Service Sets"},{"location":"labs/51-Satellite/","text":"Lab - Monitoring on Satellite Create a new host icinga.com Template: default host Address: icinga.com Set zone of the host to satellite zone Configure system_roles with webserver Check differences in preview or activity log Deploy config and check monitoring status Inspect /var/lib/icinga2/api/zones on satellite Check Source tells you where the check is executed","title":"Satellite"},{"location":"labs/51-Satellite/#lab-monitoring-on-satellite","text":"Create a new host icinga.com Template: default host Address: icinga.com Set zone of the host to satellite zone Configure system_roles with webserver Check differences in preview or activity log Deploy config and check monitoring status Inspect /var/lib/icinga2/api/zones on satellite Check Source tells you where the check is executed","title":"Lab - Monitoring on Satellite"},{"location":"labs/52-Command-Endpoint/","text":"Lab - Command Endpoint Update linux service templates disk , load and icinga Run on Agent should be set to yes Create host for satellite.icinga.local Address: 192.168.56.12 Zone: unset or master Deploy config Validate status in monitoring Check Source for disk and load should change","title":"Command Endpoint"},{"location":"labs/52-Command-Endpoint/#lab-command-endpoint","text":"Update linux service templates disk , load and icinga Run on Agent should be set to yes Create host for satellite.icinga.local Address: 192.168.56.12 Zone: unset or master Deploy config Validate status in monitoring Check Source for disk and load should change","title":"Lab - Command Endpoint"},{"location":"labs/61-Import-CMDB/","text":"Lab - Import from CMDB Check CMDB data: # mysql mysql> use cmdb mysql> SELECT * FROM hosts; Create a DB resource for the CMDB: Menu -> Configuration -> Application -> Resources Type: MySQL Host: localhost Database, Username and password is cmdb Create an Import source for the CMDB Add a modifier Property: name / Target property: fqdn Modifier: Combine multiple properties with ${name}.icinga.local Property fqdn is the key column Validate preview Check for changes and run the import Check history","title":"Import CMDB"},{"location":"labs/61-Import-CMDB/#lab-import-from-cmdb","text":"Check CMDB data: # mysql mysql> use cmdb mysql> SELECT * FROM hosts; Create a DB resource for the CMDB: Menu -> Configuration -> Application -> Resources Type: MySQL Host: localhost Database, Username and password is cmdb Create an Import source for the CMDB Add a modifier Property: name / Target property: fqdn Modifier: Combine multiple properties with ${name}.icinga.local Property fqdn is the key column Validate preview Check for changes and run the import Check history","title":"Lab - Import from CMDB"},{"location":"labs/62-Sync-CMDB/","text":"Lab - Sync CMDB Hosts Create a sync rule to create hosts with: Make sure to set: import address vars.system_os Check the preview tab Run the import Check Activity log Deploy config and check monitoring status","title":"Sync CMDB"},{"location":"labs/62-Sync-CMDB/#lab-sync-cmdb-hosts","text":"Create a sync rule to create hosts with: Make sure to set: import address vars.system_os Check the preview tab Run the import Check Activity log Deploy config and check monitoring status","title":"Lab - Sync CMDB Hosts"},{"location":"labs/63-Install-Fileshipper/","text":"Lab - Install Fileshipper Check the project and releases on GitHub: icingaweb2-module-fileshipper Install the current release with GIT sudo -i git clone \\ https://github.com/Icinga/icingaweb2-module-fileshipper \\ /usr/share/icingaweb2/modules/fileshipper -b v1.1.0 icingacli module enable fileshipper Create configuration for fileshipper: mkdir -p /etc/icingaweb2/modules/fileshipper vi /etc/icingaweb2/modules/fileshipper/imports.ini [examples] basedir = \"/opt/import\"","title":"Install Fileshipper"},{"location":"labs/63-Install-Fileshipper/#lab-install-fileshipper","text":"Check the project and releases on GitHub: icingaweb2-module-fileshipper Install the current release with GIT sudo -i git clone \\ https://github.com/Icinga/icingaweb2-module-fileshipper \\ /usr/share/icingaweb2/modules/fileshipper -b v1.1.0 icingacli module enable fileshipper Create configuration for fileshipper: mkdir -p /etc/icingaweb2/modules/fileshipper vi /etc/icingaweb2/modules/fileshipper/imports.ini [examples] basedir = \"/opt/import\"","title":"Lab - Install Fileshipper"},{"location":"labs/64-Import-CSV/","text":"Lab - Import & Sync CSV Create a Import Source that imports \u201cwindows-hosts.csv\u201d Create FQDN with domain icinga.local Validate preview Check for changes and run the import Check history Create a sync rule for the Windows hosts Ensure properties: import address vars.system_os Check for changes and run the import Check Activity log Deploy config and check monitoring status","title":"Import CSV"},{"location":"labs/64-Import-CSV/#lab-import-sync-csv","text":"Create a Import Source that imports \u201cwindows-hosts.csv\u201d Create FQDN with domain icinga.local Validate preview Check for changes and run the import Check history Create a sync rule for the Windows hosts Ensure properties: import address vars.system_os Check for changes and run the import Check Activity log Deploy config and check monitoring status","title":"Lab - Import &amp; Sync CSV"},{"location":"labs/65-Import-Services/","text":"Lab - Import Services Import Hosts Create Import Source: Internet Hosts Import internet-sites.csv Use object key: host Create Sync Rule: Internet Hosts with properties: address: ${host} import: default host Import Services Create Import Source: Internet Services Import internet-sites.csv Use object key: ${host}!${service} ${host} Create Sync Rule: Internet Services with properties: import: ${service} -> service template from name object_name: ${service} ${host} -> https icinga.com host: ${host} vars.http_vhost from vhost vars.http_uri from uri Run and Deploy Execute Imports and Syncs Check Activity log Deploy config and check monitoring status","title":"Import Services"},{"location":"labs/65-Import-Services/#lab-import-services","text":"","title":"Lab - Import Services"},{"location":"labs/65-Import-Services/#import-hosts","text":"Create Import Source: Internet Hosts Import internet-sites.csv Use object key: host Create Sync Rule: Internet Hosts with properties: address: ${host} import: default host","title":"Import Hosts"},{"location":"labs/65-Import-Services/#import-services","text":"Create Import Source: Internet Services Import internet-sites.csv Use object key: ${host}!${service} ${host} Create Sync Rule: Internet Services with properties: import: ${service} -> service template from name object_name: ${service} ${host} -> https icinga.com host: ${host} vars.http_vhost from vhost vars.http_uri from uri","title":"Import Services"},{"location":"labs/65-Import-Services/#run-and-deploy","text":"Execute Imports and Syncs Check Activity log Deploy config and check monitoring status","title":"Run and Deploy"},{"location":"labs/71-Notification-Mail/","text":"Lab - Notification by external commands Inspect the default e-mail notification in /etc/icinga2/conf.d/commands.conf Copy the config to a directory that will be loaded in Icinga 2 cp -a /etc/icinga2/conf.d/commands.conf /etc/icinga2/local.d/commands-mail.conf Reload icinga2 Re-Run Director Kickstart Create user template mail-user Create user linuxadmin using template mail-user Create notification templates mail-host-notification and mail-service-notification Create notification apply linux host Using template mail-host-notification Selecting user linuxadmin assign where host.templates contains \"linux host\" Create similar notification apply linux service","title":"E-Mail Notification"},{"location":"labs/71-Notification-Mail/#lab-notification-by-external-commands","text":"Inspect the default e-mail notification in /etc/icinga2/conf.d/commands.conf Copy the config to a directory that will be loaded in Icinga 2 cp -a /etc/icinga2/conf.d/commands.conf /etc/icinga2/local.d/commands-mail.conf Reload icinga2 Re-Run Director Kickstart Create user template mail-user Create user linuxadmin using template mail-user Create notification templates mail-host-notification and mail-service-notification Create notification apply linux host Using template mail-host-notification Selecting user linuxadmin assign where host.templates contains \"linux host\" Create similar notification apply linux service","title":"Lab - Notification by external commands"},{"location":"labs/81-Linux-Agent/","text":"Lab - Linux Agent Installation Create new host for agent-linux.icinga.local with address 192.168.56.21 Use template linux host , zone satellite and enable agent Start VM agent-linux Configure Icinga 2 Repository and install packages sudo yum install -y https://packages.icinga.com/epel/icinga-rpm-release-7-latest.noarch.rpm sudo yum install -y nagios-plugins-all icinga2 Note: Copy & Paste the link from packages.icinga.com/epel Open the host in Director, and download the agent script to your notebook Copy from your notebook to the VM scp icinga2-agent-kickstart.bash agent-linux: Then execute the script on the VM cd /home/vagrant sudo bash icinga2-agent-kickstart.bash sudo icinga2 daemon -C sudo systemctl start icinga2 sudo systemctl enable icinga2 sudo systemctl status icinga2 Check local log file for cluster connection","title":"Linux Agent"},{"location":"labs/81-Linux-Agent/#lab-linux-agent-installation","text":"Create new host for agent-linux.icinga.local with address 192.168.56.21 Use template linux host , zone satellite and enable agent Start VM agent-linux Configure Icinga 2 Repository and install packages sudo yum install -y https://packages.icinga.com/epel/icinga-rpm-release-7-latest.noarch.rpm sudo yum install -y nagios-plugins-all icinga2 Note: Copy & Paste the link from packages.icinga.com/epel Open the host in Director, and download the agent script to your notebook Copy from your notebook to the VM scp icinga2-agent-kickstart.bash agent-linux: Then execute the script on the VM cd /home/vagrant sudo bash icinga2-agent-kickstart.bash sudo icinga2 daemon -C sudo systemctl start icinga2 sudo systemctl enable icinga2 sudo systemctl status icinga2 Check local log file for cluster connection","title":"Lab - Linux Agent Installation"},{"location":"labs/82-Windows-Agent/","text":"Lab - Windows Agent Installation Create new host for agent-windows.icinga.local with address 192.168.56.22 Use template windows host , zone satellite Enable Icinga Agent and establish connection for the host Start VM agent-windows On the VM Download MSI package on Windows from packages.icinga.com/windows . Install MSI and skip setup wizard ignore the Smartscreen warning via \u201cMore Info\u201d Open Icinga Director on the Windows VM http://master.icinga.local Download agent script from Director to the Windows VM Open PowerShell as Administrator and run the script as follows cd \\Users\\Vagrant\\Downloads .\\icinga2-agent-kickstart.ps1 Allow Icinga 2 in the Firewall: netsh advfirewall firewall add rule name=\"Icinga 2\" dir=in action=allow ` program=\"C:\\Program Files\\ICINGA2\\sbin\\icinga2.exe\" enable=yes Or manually, search in Start for \u201cAllow an app through firewall\u201d: C:\\Program Files\\icinga2\\sbin\\icinga2.exe , also enable for public Check local log file for cluster connection See C:\\ProgramData\\icinga2\\var\\log\\icinga2\\icinga2.log","title":"Windows Agent"},{"location":"labs/82-Windows-Agent/#lab-windows-agent-installation","text":"Create new host for agent-windows.icinga.local with address 192.168.56.22 Use template windows host , zone satellite Enable Icinga Agent and establish connection for the host Start VM agent-windows","title":"Lab - Windows Agent Installation"},{"location":"labs/82-Windows-Agent/#on-the-vm","text":"Download MSI package on Windows from packages.icinga.com/windows . Install MSI and skip setup wizard ignore the Smartscreen warning via \u201cMore Info\u201d Open Icinga Director on the Windows VM http://master.icinga.local Download agent script from Director to the Windows VM Open PowerShell as Administrator and run the script as follows cd \\Users\\Vagrant\\Downloads .\\icinga2-agent-kickstart.ps1 Allow Icinga 2 in the Firewall: netsh advfirewall firewall add rule name=\"Icinga 2\" dir=in action=allow ` program=\"C:\\Program Files\\ICINGA2\\sbin\\icinga2.exe\" enable=yes Or manually, search in Start for \u201cAllow an app through firewall\u201d: C:\\Program Files\\icinga2\\sbin\\icinga2.exe , also enable for public Check local log file for cluster connection See C:\\ProgramData\\icinga2\\var\\log\\icinga2\\icinga2.log","title":"On the VM"},{"location":"trainer/certificate/","text":"Certificate This is the certificate a attendee will receive after the workshop. Icinga Director - Configuration made practical This workshop provides basic knowledge for getting started with Director while utilizing all its features. The attendee will learn how to manage a complete Icinga configuration with the Director, but also how to import data from external sources, and how to generate monitoring configuration from it. As this training is based in the style of a workshop also individual topics can be raised by attendees and a solution will be elaborated in the group with the trainer as a lead. Topics: Basic Knowledge Installation and basic setup Templates, Fields and Custom Variables Commands and plugins Creating and managing hosts Services for hosts, apply-rules and service sets History and deployments Import & Sync Importing and pre-processing data Syncing data to Icinga configuration Automation of import and sync Advanced Knowledge Applying Notifications and Dependencies Provisioning agents with the help of Director Configuration baskets Working environment: Icinga-Master with a satellite Agents on Linux and Windows Exemplary data in SQL and flat files","title":"Certificate"},{"location":"trainer/certificate/#certificate","text":"This is the certificate a attendee will receive after the workshop.","title":"Certificate"},{"location":"trainer/certificate/#icinga-director-configuration-made-practical","text":"This workshop provides basic knowledge for getting started with Director while utilizing all its features. The attendee will learn how to manage a complete Icinga configuration with the Director, but also how to import data from external sources, and how to generate monitoring configuration from it. As this training is based in the style of a workshop also individual topics can be raised by attendees and a solution will be elaborated in the group with the trainer as a lead. Topics: Basic Knowledge Installation and basic setup Templates, Fields and Custom Variables Commands and plugins Creating and managing hosts Services for hosts, apply-rules and service sets History and deployments Import & Sync Importing and pre-processing data Syncing data to Icinga configuration Automation of import and sync Advanced Knowledge Applying Notifications and Dependencies Provisioning agents with the help of Director Configuration baskets Working environment: Icinga-Master with a satellite Agents on Linux and Windows Exemplary data in SQL and flat files","title":"Icinga Director - Configuration made practical"},{"location":"trainer/content/","text":"Workshop Content In German: \u201cDer rote Faden\u201d Introduction Introduction round, experiences with Icinga Training environment Lab: Explore training VMs Director concept Integration in Icinga Web 2 and Icinga 2 Getting Started Installation and sources Dependencies and background daemon Lab: Inspect Installation Kickstart Lab: Kickstart with Icinga 2 Overview of Director UI Activity Log Deployments Lab: First Deploy Commands Lab: Prepare external check commands Lab: Create a new check command Custom Data Fields & Custom Variables Data lists Best Practice on variables (customer, hardware, os, sla, owner) Lab: Create fields and a list Starting with hosts Templates and the idea behind them Objects and difference to templates Lab: Create basic templates and hosts Host groups and apply Lab: Create host groups Inspection from the monitoring module Cloning hosts Monitoring stuff with services Service Templates Apply, Template Services, Host Services Lab: Create services for ping and Linux monitoring TODO Lab: Create a separate disk check to monitor /home on master Service Sets, as apply and manually added Lab: Create a service set for the web server role TODO Lab: Add a host for github.com and manually add the serviceset to it (Note: having https on master critical is kinda intended - you will see if users correctly set http_ssl) Service groups Service overrides on hosts TODO Lab: Override disk thresholds on master Cloning services Apply For based on array field TODO Lab: Add partitions field to hosts and build apply for for it Clustering Zones and satellites Why to never manage Zones and Endpoints in Director Lab: Create a host on the satellite Agent monitoring Explain how command_endpoint tells the remote how to check instead of scheduling the check Lab: Add satellite host and update services Explain why command_endpoint works now vs. agent later (zone and endpoint already exist) Additional global zones for agents and commands Here often ends days 1 - depending on amount of attendees and questions. Import & Sync What is an Import Modifiers Lab: Import Linux Hosts from CMDB What is Sync Properties and Filters Syncing data to Icinga configuration Lab: Create hosts from CMDB Add-On: Fileshipper Lab: Install and configure fileshipper Lab: Import Windows hosts from CSV Syncing services (combined key unique) Lab: Import Internet Sites and create hosts and services Automation with background jobs Triggering of import and sync Automatic config deployments Housekeeping Time Periods Show Icinga 2 documentation and glance on Director Interface Usable for notification and check settings Notifications Overview over notification objects (users, groups, templates, notification commands) Lab: Notification by external commands Dependencies Dependencies vs. Zones and Satellites Only specified parent currently Installing agents with Director Agent Tab on Hosts Lab: Configure Linux Agent Lab: Configure Windows Agent Self Service API for Windows Agents, Hostgroups and keys Advanced Topics Health monitoring on dashboard and check command Configuration baskets Quick Glance: icingacli Quick Glance: Director API Permissions and restrictions","title":"Content"},{"location":"trainer/content/#workshop-content","text":"In German: \u201cDer rote Faden\u201d Introduction Introduction round, experiences with Icinga Training environment Lab: Explore training VMs Director concept Integration in Icinga Web 2 and Icinga 2 Getting Started Installation and sources Dependencies and background daemon Lab: Inspect Installation Kickstart Lab: Kickstart with Icinga 2 Overview of Director UI Activity Log Deployments Lab: First Deploy Commands Lab: Prepare external check commands Lab: Create a new check command Custom Data Fields & Custom Variables Data lists Best Practice on variables (customer, hardware, os, sla, owner) Lab: Create fields and a list Starting with hosts Templates and the idea behind them Objects and difference to templates Lab: Create basic templates and hosts Host groups and apply Lab: Create host groups Inspection from the monitoring module Cloning hosts Monitoring stuff with services Service Templates Apply, Template Services, Host Services Lab: Create services for ping and Linux monitoring TODO Lab: Create a separate disk check to monitor /home on master Service Sets, as apply and manually added Lab: Create a service set for the web server role TODO Lab: Add a host for github.com and manually add the serviceset to it (Note: having https on master critical is kinda intended - you will see if users correctly set http_ssl) Service groups Service overrides on hosts TODO Lab: Override disk thresholds on master Cloning services Apply For based on array field TODO Lab: Add partitions field to hosts and build apply for for it Clustering Zones and satellites Why to never manage Zones and Endpoints in Director Lab: Create a host on the satellite Agent monitoring Explain how command_endpoint tells the remote how to check instead of scheduling the check Lab: Add satellite host and update services Explain why command_endpoint works now vs. agent later (zone and endpoint already exist) Additional global zones for agents and commands Here often ends days 1 - depending on amount of attendees and questions. Import & Sync What is an Import Modifiers Lab: Import Linux Hosts from CMDB What is Sync Properties and Filters Syncing data to Icinga configuration Lab: Create hosts from CMDB Add-On: Fileshipper Lab: Install and configure fileshipper Lab: Import Windows hosts from CSV Syncing services (combined key unique) Lab: Import Internet Sites and create hosts and services Automation with background jobs Triggering of import and sync Automatic config deployments Housekeeping Time Periods Show Icinga 2 documentation and glance on Director Interface Usable for notification and check settings Notifications Overview over notification objects (users, groups, templates, notification commands) Lab: Notification by external commands Dependencies Dependencies vs. Zones and Satellites Only specified parent currently Installing agents with Director Agent Tab on Hosts Lab: Configure Linux Agent Lab: Configure Windows Agent Self Service API for Windows Agents, Hostgroups and keys Advanced Topics Health monitoring on dashboard and check command Configuration baskets Quick Glance: icingacli Quick Glance: Director API Permissions and restrictions","title":"Workshop Content"},{"location":"trainer/machines/","text":"Virtual Machines Preparing VMs sudo yum install git sudo yum install https://releases.hashicorp.com/vagrant/2.2.6/vagrant_2.2.6_x86_64.rpm vagrant plugin install vagrant-hosts vagrant box add bento/centos-7.6 --provider virtualbox vagrant box add StefanScherer/windows_10 --provider virtualbox Now we can clone this repository and bootstrap the VMs. git clone https://github.com/NETWAYS/workshop-icinga-director.git # or git clone git@github.com:NETWAYS/workshop-icinga-director.git cd workshop-director/ vagrant up Make sure all changes are applied and no errors appear, you can repeat the provisioning as well: vagrant provision Re-create ssh key ssh-keygen -f config/insecure_ssh_key -m pem -t rsa -b 2048 -C \"INSECURE SSH KEY for Icinga Director Workshop\" And update profile::linux::ssh_keys in puppet/hieradata/common.yaml . Export VMs vagrant halt ./scripts/export-vms.sh Import to fresh Notebook See files under config/ and store them with the exported VMs. README.txt explains how to use it on training notebook. Linux Accounts SSH Login: vagrant with password vagrant Root passwort: vagrant Windows Account: vagrant with password vagrant (but auto login is enabled)","title":"Machines"},{"location":"trainer/machines/#virtual-machines","text":"","title":"Virtual Machines"},{"location":"trainer/machines/#preparing-vms","text":"sudo yum install git sudo yum install https://releases.hashicorp.com/vagrant/2.2.6/vagrant_2.2.6_x86_64.rpm vagrant plugin install vagrant-hosts vagrant box add bento/centos-7.6 --provider virtualbox vagrant box add StefanScherer/windows_10 --provider virtualbox Now we can clone this repository and bootstrap the VMs. git clone https://github.com/NETWAYS/workshop-icinga-director.git # or git clone git@github.com:NETWAYS/workshop-icinga-director.git cd workshop-director/ vagrant up Make sure all changes are applied and no errors appear, you can repeat the provisioning as well: vagrant provision","title":"Preparing VMs"},{"location":"trainer/machines/#re-create-ssh-key","text":"ssh-keygen -f config/insecure_ssh_key -m pem -t rsa -b 2048 -C \"INSECURE SSH KEY for Icinga Director Workshop\" And update profile::linux::ssh_keys in puppet/hieradata/common.yaml .","title":"Re-create ssh key"},{"location":"trainer/machines/#export-vms","text":"vagrant halt ./scripts/export-vms.sh","title":"Export VMs"},{"location":"trainer/machines/#import-to-fresh-notebook","text":"See files under config/ and store them with the exported VMs. README.txt explains how to use it on training notebook.","title":"Import to fresh Notebook"},{"location":"trainer/machines/#linux-accounts","text":"SSH Login: vagrant with password vagrant Root passwort: vagrant Windows Account: vagrant with password vagrant (but auto login is enabled)","title":"Linux Accounts"}]}